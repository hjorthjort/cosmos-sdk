(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{726:function(g,e,C){"use strict";C.r(e);var I=C(1),t=Object(I.a)({},(function(){var g=this,e=g.$createElement,C=g._self._c||e;return C("ContentSlotsDistributor",{attrs:{"slot-key":g.$parent.slotKey}},[C("h1",{attrs:{id:"accounts"}},[C("a",{staticClass:"header-anchor",attrs:{href:"#accounts"}},[g._v("#")]),g._v(" Accounts")]),g._v(" "),C("p",{attrs:{synopsis:""}},[g._v("This document describes the in-built accounts system of the Cosmos SDK.")]),g._v(" "),C("h3",{attrs:{id:"pre-requisite-readings"}},[C("a",{staticClass:"header-anchor",attrs:{href:"#pre-requisite-readings"}},[g._v("#")]),g._v(" Pre-requisite Readings")]),g._v(" "),C("ul",[C("li",{attrs:{prereq:""}},[C("RouterLink",{attrs:{to:"/basics/app-anatomy.html"}},[g._v("Anatomy of an SDK Application")])],1)]),g._v(" "),C("h2",{attrs:{id:"account-definition"}},[C("a",{staticClass:"header-anchor",attrs:{href:"#account-definition"}},[g._v("#")]),g._v(" Account Definition")]),g._v(" "),C("p",[g._v("In the Cosmos SDK, an "),C("em",[g._v("account")]),g._v(" designates a pair of "),C("em",[g._v("public key")]),g._v(" "),C("code",[g._v("PubKey")]),g._v(" and "),C("em",[g._v("private key")]),g._v(" "),C("code",[g._v("PrivKey")]),g._v(". The "),C("code",[g._v("PubKey")]),g._v(" can be derived to generate various "),C("code",[g._v("Addresses")]),g._v(", which are used to identify users (among other parties) in the application. "),C("code",[g._v("Addresses")]),g._v(" are also associated with "),C("RouterLink",{attrs:{to:"/building-modules/messages-and-queries.html#messages"}},[C("code",[g._v("message")]),g._v("s")]),g._v(" to identify the sender of the "),C("code",[g._v("message")]),g._v(". The "),C("code",[g._v("PrivKey")]),g._v(" is used to generate "),C("a",{attrs:{href:"#signatures"}},[g._v("digital signatures")]),g._v(" to prove that an "),C("code",[g._v("Address")]),g._v(" associated with the "),C("code",[g._v("PrivKey")]),g._v(" approved of a given "),C("code",[g._v("message")]),g._v(".")],1),g._v(" "),C("p",[g._v("To derive "),C("code",[g._v("PubKey")]),g._v("s and "),C("code",[g._v("PrivKey")]),g._v("s, the Cosmos SDK uses a standard called "),C("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[g._v("BIP32"),C("OutboundLink")],1),g._v(". This standard defines how to build an HD wallet, where a wallet is a set of accounts. At the core of every account, there is a seed, which takes the form of a 12 or 24-words mnemonic. From this mnemonic, it is possible to derive any number of "),C("code",[g._v("PrivKey")]),g._v("s using one-way cryptographic function. Then, a "),C("code",[g._v("PubKey")]),g._v(" can be derived from the "),C("code",[g._v("PrivKey")]),g._v(". Naturally, the mnemonic is the most sensitive information, as private keys can always be re-generated if the mnemonic is preserved.")]),g._v(" "),C("code-block",{staticClass:"codeblock",attrs:{language:"",base64:"ICAgICBBY2NvdW50IDAgICAgICAgICAgICAgICAgICAgICAgICAgQWNjb3VudCAxICAgICAgICAgICAgICAgICAgICAgICAgIEFjY291bnQgMgoKKy0tLS0tLS0tLS0tLS0tLS0tLSsgICAgICAgICAgICAgICstLS0tLS0tLS0tLS0tLS0tLS0rICAgICAgICAgICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tLSsKfCAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgIHwKfCAgICBBZGRyZXNzIDAgICAgIHwgICAgICAgICAgICAgIHwgICAgQWRkcmVzcyAxICAgICB8ICAgICAgICAgICAgICAgfCAgICBBZGRyZXNzIDIgICAgIHwKfCAgICAgICAgXiAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgIF4gICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgXiAgICAgICAgIHwKfCAgICAgICAgfCAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgIHwgICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgfCAgICAgICAgIHwKfCAgICAgICAgfCAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgIHwgICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgfCAgICAgICAgIHwKfCAgICAgICAgfCAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgIHwgICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgfCAgICAgICAgIHwKfCAgICAgICAgKyAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgICsgICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgKyAgICAgICAgIHwKfCAgUHVibGljIGtleSAwICAgIHwgICAgICAgICAgICAgIHwgIFB1YmxpYyBrZXkgMSAgICB8ICAgICAgICAgICAgICAgfCAgUHVibGljIGtleSAyICAgIHwKfCAgICAgICAgXiAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgIF4gICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgXiAgICAgICAgIHwKfCAgICAgICAgfCAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgIHwgICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgfCAgICAgICAgIHwKfCAgICAgICAgfCAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgIHwgICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgfCAgICAgICAgIHwKfCAgICAgICAgfCAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgIHwgICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgfCAgICAgICAgIHwKfCAgICAgICAgKyAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgICsgICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgKyAgICAgICAgIHwKfCAgUHJpdmF0ZSBrZXkgMCAgIHwgICAgICAgICAgICAgIHwgIFByaXZhdGUga2V5IDEgICB8ICAgICAgICAgICAgICAgfCAgUHJpdmF0ZSBrZXkgMiAgIHwKfCAgICAgICAgXiAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgIF4gICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgXiAgICAgICAgIHwKKy0tLS0tLS0tLS0tLS0tLS0tLSsgICAgICAgICAgICAgICstLS0tLS0tLS0tLS0tLS0tLS0rICAgICAgICAgICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tLSsKICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAogICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CiAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKICAgICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArLS0tLS0tLS0tKy0tLS0tLS0tLSsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICB8CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIE1hc3RlciBQcml2S2V5ICAgfAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgIHwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0rCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICstLS0tLS0tLS0rLS0tLS0tLS0tKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgIHwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgTW5lbW9uaWMgKFNlZWQpICB8CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgfAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArLS0tLS0tLS0tLS0tLS0tLS0tLSsK"}}),g._v(" "),C("p",[g._v("In the Cosmos SDK, accounts are stored and managed via an object called a "),C("a",{attrs:{href:"#keyring"}},[C("code",[g._v("Keyring")])]),g._v(".")]),g._v(" "),C("h2",{attrs:{id:"keyring"}},[C("a",{staticClass:"header-anchor",attrs:{href:"#keyring"}},[g._v("#")]),g._v(" Keyring")]),g._v(" "),C("p",[g._v("A "),C("code",[g._v("Keyring")]),g._v(" is an object that stores and manages accounts. In the Cosmos SDK, a "),C("code",[g._v("Keyring")]),g._v(" implementation follows the "),C("code",[g._v("Keyring")]),g._v(" interface:")]),g._v(" "),C("p",[C("code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"Ly8gS2V5cmluZyBleHBvc2VzIG9wZXJhdGlvbnMgb3ZlciBhIGJhY2tlbmQgc3VwcG9ydGVkIGJ5IGdpdGh1Yi5jb20vOTlkZXNpZ25zL2tleXJpbmcuCnR5cGUgS2V5cmluZyBpbnRlcmZhY2UgewoJLy8gTGlzdCBhbGwga2V5cy4KCUxpc3QoKSAoW11JbmZvLCBlcnJvcikKCgkvLyBTdXBwb3J0ZWQgc2lnbmluZyBhbGdvcml0aG1zIGZvciBLZXlyaW5nIGFuZCBMZWRnZXIgcmVzcGVjdGl2ZWx5LgoJU3VwcG9ydGVkQWxnb3JpdGhtcygpIChTaWduaW5nQWxnb0xpc3QsIFNpZ25pbmdBbGdvTGlzdCkKCgkvLyBLZXkgYW5kIEtleUJ5QWRkcmVzcyByZXR1cm4ga2V5cyBieSB1aWQgYW5kIGFkZHJlc3MgcmVzcGVjdGl2ZWx5LgoJS2V5KHVpZCBzdHJpbmcpIChJbmZvLCBlcnJvcikKCUtleUJ5QWRkcmVzcyhhZGRyZXNzIHNkay5BZGRyZXNzKSAoSW5mbywgZXJyb3IpCgoJLy8gRGVsZXRlIGFuZCBEZWxldGVCeUFkZHJlc3MgcmVtb3ZlIGtleXMgZnJvbSB0aGUga2V5cmluZy4KCURlbGV0ZSh1aWQgc3RyaW5nKSBlcnJvcgoJRGVsZXRlQnlBZGRyZXNzKGFkZHJlc3Mgc2RrLkFkZHJlc3MpIGVycm9yCgoJLy8gTmV3TW5lbW9uaWMgZ2VuZXJhdGVzIGEgbmV3IG1uZW1vbmljLCBkZXJpdmVzIGEgaGllcmFyY2hpY2FsIGRldGVybWluaXN0aWMKCS8vIGtleSBmcm9tIHRoYXQsIGFuZCBwZXJzaXN0cyBpdCB0byB0aGUgc3RvcmFnZS4gUmV0dXJucyB0aGUgZ2VuZXJhdGVkIG1uZW1vbmljIGFuZCB0aGUga2V5CgkvLyBJbmZvLiBJdCByZXR1cm5zIGFuIGVycm9yIGlmIGl0IGZhaWxzIHRvIGdlbmVyYXRlIGEga2V5IGZvciB0aGUgZ2l2ZW4gYWxnbyB0eXBlLCBvciBpZgoJLy8gYW5vdGhlciBrZXkgaXMgYWxyZWFkeSBzdG9yZWQgdW5kZXIgdGhlIHNhbWUgbmFtZS4KCU5ld01uZW1vbmljKHVpZCBzdHJpbmcsIGxhbmd1YWdlIExhbmd1YWdlLCBoZFBhdGggc3RyaW5nLCBhbGdvIFNpZ25hdHVyZUFsZ28pIChJbmZvLCBzdHJpbmcsIGVycm9yKQoKCS8vIE5ld0FjY291bnQgY29udmVydHMgYSBtbmVtb25pYyB0byBhIHByaXZhdGUga2V5IGFuZCBCSVAtMzkgSEQgUGF0aCBhbmQgcGVyc2lzdHMgaXQuCglOZXdBY2NvdW50KHVpZCwgbW5lbW9uaWMsIGJpcDM5UGFzc3dkLCBoZFBhdGggc3RyaW5nLCBhbGdvIFNpZ25hdHVyZUFsZ28pIChJbmZvLCBlcnJvcikKCgkvLyBTYXZlTGVkZ2VyS2V5IHJldHJpZXZlcyBhIHB1YmxpYyBrZXkgcmVmZXJlbmNlIGZyb20gYSBMZWRnZXIgZGV2aWNlIGFuZCBwZXJzaXN0cyBpdC4KCVNhdmVMZWRnZXJLZXkodWlkIHN0cmluZywgYWxnbyBTaWduYXR1cmVBbGdvLCBocnAgc3RyaW5nLCBjb2luVHlwZSwgYWNjb3VudCwgaW5kZXggdWludDMyKSAoSW5mbywgZXJyb3IpCgoJLy8gU2F2ZVB1YktleSBzdG9yZXMgYSBwdWJsaWMga2V5IGFuZCByZXR1cm5zIHRoZSBwZXJzaXN0ZWQgSW5mbyBzdHJ1Y3R1cmUuCglTYXZlUHViS2V5KHVpZCBzdHJpbmcsIHB1YmtleSB0bWNyeXB0by5QdWJLZXksIGFsZ28gaGQuUHViS2V5VHlwZSkgKEluZm8sIGVycm9yKQoKCS8vIFNhdmVNdWx0aXNpZyBzdG9yZXMgYW5kIHJldHVybnMgYSBuZXcgbXVsdHNpZyAob2ZmbGluZSkga2V5IHJlZmVyZW5jZS4KCVNhdmVNdWx0aXNpZyh1aWQgc3RyaW5nLCBwdWJrZXkgdG1jcnlwdG8uUHViS2V5KSAoSW5mbywgZXJyb3IpCgoJU2lnbmVyCgoJSW1wb3J0ZXIKCUV4cG9ydGVyCn0="}})],1),g._v(" "),C("p",[g._v("The default implementation of "),C("code",[g._v("Keyring")]),g._v(" comes from the third-party "),C("a",{attrs:{href:"https://github.com/99designs/keyring",target:"_blank",rel:"noopener noreferrer"}},[C("code",[g._v("99designs/keyring")]),C("OutboundLink")],1),g._v(" library.")]),g._v(" "),C("p",[g._v("A few notes on the "),C("code",[g._v("Keyring")]),g._v(" methods:")]),g._v(" "),C("ul",[C("li",[C("code",[g._v("Sign(uid string, msg []byte) ([]byte, tmcrypto.PubKey, error)")]),g._v(" strictly deals with the signature of the "),C("code",[g._v("message")]),g._v(" bytes. Some preliminary work should be done beforehand to prepare and encode the "),C("code",[g._v("message")]),g._v(" into a canonical "),C("code",[g._v("[]byte")]),g._v(" form, and this is done in the "),C("code",[g._v("GetSignBytes")]),g._v(" method. See an example of "),C("code",[g._v("message")]),g._v(" preparation from the "),C("code",[g._v("x/bank")]),g._v(" module. Note that signature verification is not implemented in the SDK by default. It is deferred to the "),C("a",{attrs:{href:"#antehandler"}},[C("code",[g._v("anteHandler")])]),g._v(".\n"),C("code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"Ly8gR2V0U2lnbkJ5dGVzIEltcGxlbWVudHMgTXNnLgpmdW5jIChtc2cgTXNnU2VuZCkgR2V0U2lnbkJ5dGVzKCkgW11ieXRlIHsKCXJldHVybiBzZGsuTXVzdFNvcnRKU09OKE1vZHVsZUNkYy5NdXN0TWFyc2hhbEpTT04oJmFtcDttc2cpKQp9"}})],1),g._v(" "),C("li",[C("code",[g._v("NewAccount(uid, mnemonic, bip39Passwd, hdPath string, algo SignatureAlgo) (Info, error)")]),g._v(" creates a new account based on the "),C("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[C("code",[g._v("bip44 path")]),C("OutboundLink")],1),g._v(" and persists it on disk (note that the "),C("code",[g._v("PrivKey")]),g._v(" is "),C("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/blob/d9175200920e96bfa4182b5c8bc46d91b17a28a1/crypto/keys/mintkey/mintkey.go",target:"_blank",rel:"noopener noreferrer"}},[g._v("encrypted with a passphrase before being persisted"),C("OutboundLink")],1),g._v(", it is "),C("strong",[g._v("never stored unencrypted")]),g._v("). In the context of this method, the "),C("code",[g._v("account")]),g._v(" and "),C("code",[g._v("address")]),g._v(" parameters refer to the segment of the BIP44 derivation path (e.g. "),C("code",[g._v("0")]),g._v(", "),C("code",[g._v("1")]),g._v(", "),C("code",[g._v("2")]),g._v(", ...) used to derive the "),C("code",[g._v("PrivKey")]),g._v(" and "),C("code",[g._v("PubKey")]),g._v(" from the mnemonic (note that given the same mnemonic and "),C("code",[g._v("account")]),g._v(", the same "),C("code",[g._v("PrivKey")]),g._v(" will be generated, and given the same "),C("code",[g._v("account")]),g._v(" and "),C("code",[g._v("address")]),g._v(", the same "),C("code",[g._v("PubKey")]),g._v(" and "),C("code",[g._v("Address")]),g._v(" will be generated). Finally, note that the "),C("code",[g._v("NewAccount")]),g._v(" method derives keys and addresses using the algorithm specified in the last argument "),C("code",[g._v("algo")]),g._v(". Currently, the SDK supports two public key algorithms:\n"),C("ul",[C("li",[C("code",[g._v("secp256k1")]),g._v(", as implemented in the "),C("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/blob/d9175200920e96bfa4182b5c8bc46d91b17a28a1/crypto/keys/secp256k1/secp256k1.go",target:"_blank",rel:"noopener noreferrer"}},[g._v("SDK's "),C("code",[g._v("crypto/keys/secp256k1")]),g._v(" package"),C("OutboundLink")],1),g._v(",")]),g._v(" "),C("li",[C("code",[g._v("ed25519")]),g._v(", as implemented in the "),C("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/blob/d9175200920e96bfa4182b5c8bc46d91b17a28a1/crypto/keys/ed25519/ed25519.go",target:"_blank",rel:"noopener noreferrer"}},[g._v("SDK's "),C("code",[g._v("crypto/keys/ed25519")]),g._v(" package"),C("OutboundLink")],1),g._v(".")])])]),g._v(" "),C("li",[C("code",[g._v("ExportPrivKeyArmor(uid, encryptPassphrase string) (armor string, err error)")]),g._v(" exports a private key in ASCII-armored encrypted format, using the given passphrase. You can then either import it again into the keyring using the "),C("code",[g._v("ImportPrivKey(uid, armor, passphrase string)")]),g._v(" function, or decrypt it into a raw private key using the "),C("code",[g._v("UnarmorDecryptPrivKey(armorStr string, passphrase string)")]),g._v(" function.")])]),g._v(" "),C("p",[g._v("Also see the "),C("a",{attrs:{href:"#addresses"}},[C("code",[g._v("Addresses")])]),g._v(" section for more information.")]),g._v(" "),C("h2",{attrs:{id:"addresses-and-pubkeys"}},[C("a",{staticClass:"header-anchor",attrs:{href:"#addresses-and-pubkeys"}},[g._v("#")]),g._v(" Addresses and PubKeys")]),g._v(" "),C("p",[C("code",[g._v("Addresses")]),g._v(" and "),C("code",[g._v("PubKey")]),g._v("s are both public information that identify actors in the application. There are 3 main types of "),C("code",[g._v("Addresses")]),g._v("/"),C("code",[g._v("PubKeys")]),g._v(" available by default in the Cosmos SDK:")]),g._v(" "),C("ul",[C("li",[g._v("Addresses and Keys for "),C("strong",[g._v("accounts")]),g._v(", which identify users (e.g. the sender of a "),C("code",[g._v("message")]),g._v("). They are derived using the "),C("strong",[C("code",[g._v("secp256k1")])]),g._v(" curve.")]),g._v(" "),C("li",[g._v("Addresses and Keys for "),C("strong",[g._v("validator operators")]),g._v(", which identify the operators of validators. They are derived using the "),C("strong",[C("code",[g._v("secp256k1")])]),g._v(" curve.")]),g._v(" "),C("li",[g._v("Addresses and Keys for "),C("strong",[g._v("consensus nodes")]),g._v(", which identify the validator nodes participating in consensus. They are derived using the "),C("strong",[C("code",[g._v("ed25519")])]),g._v(" curve.")])]),g._v(" "),C("table",[C("thead",[C("tr",[C("th"),g._v(" "),C("th",[g._v("Address bech32 Prefix")]),g._v(" "),C("th",[g._v("Pubkey bech32 Prefix")]),g._v(" "),C("th",[g._v("Curve")]),g._v(" "),C("th",[g._v("Address byte length")]),g._v(" "),C("th",[g._v("Pubkey byte length")])])]),g._v(" "),C("tbody",[C("tr",[C("td",[g._v("Accounts")]),g._v(" "),C("td",[g._v("cosmos")]),g._v(" "),C("td",[g._v("cosmospub")]),g._v(" "),C("td",[C("code",[g._v("secp256k1")])]),g._v(" "),C("td",[C("code",[g._v("20")])]),g._v(" "),C("td",[C("code",[g._v("33")])])]),g._v(" "),C("tr",[C("td",[g._v("Validator Operator")]),g._v(" "),C("td",[g._v("cosmosvaloper")]),g._v(" "),C("td",[g._v("cosmosvaloperpub")]),g._v(" "),C("td",[C("code",[g._v("secp256k1")])]),g._v(" "),C("td",[C("code",[g._v("20")])]),g._v(" "),C("td",[C("code",[g._v("33")])])]),g._v(" "),C("tr",[C("td",[g._v("Consensus Nodes")]),g._v(" "),C("td",[g._v("cosmosvalcons")]),g._v(" "),C("td",[g._v("cosmosvalconspub")]),g._v(" "),C("td",[C("code",[g._v("ed25519")])]),g._v(" "),C("td",[C("code",[g._v("20")])]),g._v(" "),C("td",[C("code",[g._v("32")])])])])]),g._v(" "),C("h3",{attrs:{id:"pubkeys"}},[C("a",{staticClass:"header-anchor",attrs:{href:"#pubkeys"}},[g._v("#")]),g._v(" PubKeys")]),g._v(" "),C("p",[C("code",[g._v("PubKey")]),g._v("s used in the Cosmos SDK are Protobuf messages and extend the "),C("code",[g._v("Pubkey")]),g._v(" interface defined in tendermint's "),C("code",[g._v("crypto")]),g._v(" package:")]),g._v(" "),C("p",[C("code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"Ly8gUHViS2V5IGludGVyZmFjZSBleHRlbmRzIHByb3RvLk1lc3NhZ2UKLy8gYW5kIHRlbmRlcm1pbnQgY3J5cHRvLlB1YktleQp0eXBlIFB1YktleSBpbnRlcmZhY2UgewoJcHJvdG8uTWVzc2FnZQoJdG1jcnlwdG8uUHViS2V5Cn0="}})],1),g._v(" "),C("p",[C("code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"dHlwZSBQdWJLZXkgaW50ZXJmYWNlIHsKCUFkZHJlc3MoKSBBZGRyZXNzCglCeXRlcygpIFtdYnl0ZQoJVmVyaWZ5U2lnbmF0dXJlKG1zZyBbXWJ5dGUsIHNpZyBbXWJ5dGUpIGJvb2wKCUVxdWFscyhQdWJLZXkpIGJvb2wKCVR5cGUoKSBzdHJpbmcKfQ=="}})],1),g._v(" "),C("ul",[C("li",[g._v("For "),C("code",[g._v("secp256k1")]),g._v(" keys, the actual implementation can be found "),C("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/blob/d9175200920e96bfa4182b5c8bc46d91b17a28a1/crypto/keys/secp256k1/secp256k1.go",target:"_blank",rel:"noopener noreferrer"}},[g._v("here"),C("OutboundLink")],1),g._v(".")]),g._v(" "),C("li",[g._v("For "),C("code",[g._v("ed25519")]),g._v(" keys, it can be found "),C("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/blob/d9175200920e96bfa4182b5c8bc46d91b17a28a1/crypto/keys/ed25519/ed25519.go",target:"_blank",rel:"noopener noreferrer"}},[g._v("here"),C("OutboundLink")],1),g._v(".")])]),g._v(" "),C("p",[g._v("In both case, the actual key (as raw bytes) is the compressed form of the pubkey. The first byte is a "),C("code",[g._v("0x02")]),g._v(" byte if the "),C("code",[g._v("y")]),g._v("-coordinate is the lexicographically largest of the two associated with the "),C("code",[g._v("x")]),g._v("-coordinate. Otherwise the first byte is a "),C("code",[g._v("0x03")]),g._v(". This prefix is followed with the "),C("code",[g._v("x")]),g._v("-coordinate.")]),g._v(" "),C("p",[g._v("Note that in the Cosmos SDK, "),C("code",[g._v("Pubkeys")]),g._v(" are not manipulated in their raw bytes form. Instead, they are encoded to string using "),C("RouterLink",{attrs:{to:"/core/encoding.html#amino"}},[C("code",[g._v("Amino")])]),g._v(" and "),C("a",{attrs:{href:"https://en.bitcoin.it/wiki/Bech32",target:"_blank",rel:"noopener noreferrer"}},[C("code",[g._v("bech32")]),C("OutboundLink")],1),g._v(". In the SDK, it is done by first calling the "),C("code",[g._v("Bytes()")]),g._v(" method on the raw "),C("code",[g._v("Pubkey")]),g._v(" (which applies amino encoding), and then the "),C("code",[g._v("ConvertAndEncode")]),g._v(" method of "),C("code",[g._v("bech32")]),g._v(".")],1),g._v(" "),C("p",[C("code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"ZnVuYyBNdXN0QmVjaDMyaWZ5QWRkcmVzc0J5dGVzKHByZWZpeCBzdHJpbmcsIGJzIFtdYnl0ZSkgc3RyaW5nIHsKCXMsIGVyciA6PSBCZWNoMzJpZnlBZGRyZXNzQnl0ZXMocHJlZml4LCBicykKCWlmIGVyciAhPSBuaWwgewoJCXBhbmljKGVycikKCX0KCXJldHVybiBzCn0KCi8vIEZvcm1hdCBpbXBsZW1lbnRzIHRoZSBmbXQuRm9ybWF0dGVyIGludGVyZmFjZS4KLy8gbm9saW50OiBlcnJjaGVjawpmdW5jIChjYSBDb25zQWRkcmVzcykgRm9ybWF0KHMgZm10LlN0YXRlLCB2ZXJiIHJ1bmUpIHsKCXN3aXRjaCB2ZXJiIHsKCWNhc2UgJ3MnOgoJCXMuV3JpdGUoW11ieXRlKGNhLlN0cmluZygpKSkKCWNhc2UgJ3AnOgoJCXMuV3JpdGUoW11ieXRlKGZtdC5TcHJpbnRmKCZxdW90OyVwJnF1b3Q7LCBjYSkpKQoJZGVmYXVsdDoKCQlzLldyaXRlKFtdYnl0ZShmbXQuU3ByaW50ZigmcXVvdDslWCZxdW90OywgW11ieXRlKGNhKSkpKQoJfQp9CgovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi8vIGF1eGlsaWFyeQovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgovLyBCZWNoMzJQdWJLZXlUeXBlIGRlZmluZXMgYSBzdHJpbmcgdHlwZSBhbGlhcyBmb3IgYSBCZWNoMzIgcHVibGljIGtleSB0eXBlLgp0eXBlIEJlY2gzMlB1YktleVR5cGUgc3RyaW5nCgovLyBCZWNoMzIgY29udmVyc2lvbiBjb25zdGFudHMKY29uc3QgKAoJQmVjaDMyUHViS2V5VHlwZUFjY1B1YiAgQmVjaDMyUHViS2V5VHlwZSA9ICZxdW90O2FjY3B1YiZxdW90OwoJQmVjaDMyUHViS2V5VHlwZVZhbFB1YiAgQmVjaDMyUHViS2V5VHlwZSA9ICZxdW90O3ZhbHB1YiZxdW90OwoJQmVjaDMyUHViS2V5VHlwZUNvbnNQdWIgQmVjaDMyUHViS2V5VHlwZSA9ICZxdW90O2NvbnNwdWImcXVvdDsKKQoKLy8gQmVjaDMyaWZ5UHViS2V5IHJldHVybnMgYSBCZWNoMzIgZW5jb2RlZCBzdHJpbmcgY29udGFpbmluZyB0aGUgYXBwcm9wcmlhdGUKLy8gcHJlZml4IGJhc2VkIG9uIHRoZSBrZXkgdHlwZSBwcm92aWRlZCBmb3IgYSBnaXZlbiBQdWJsaWNLZXkuCmZ1bmMgQmVjaDMyaWZ5UHViS2V5KHBrdCBCZWNoMzJQdWJLZXlUeXBlLCBwdWJrZXkgY3J5cHRvLlB1YktleSkgKHN0cmluZywgZXJyb3IpIHsKCXZhciBiZWNoMzJQcmVmaXggc3RyaW5nCgoJc3dpdGNoIHBrdCB7CgljYXNlIEJlY2gzMlB1YktleVR5cGVBY2NQdWI6CgkJYmVjaDMyUHJlZml4ID0gR2V0Q29uZmlnKCkuR2V0QmVjaDMyQWNjb3VudFB1YlByZWZpeCgpCgoJY2FzZSBCZWNoMzJQdWJLZXlUeXBlVmFsUHViOgoJCWJlY2gzMlByZWZpeCA9IEdldENvbmZpZygpLkdldEJlY2gzMlZhbGlkYXRvclB1YlByZWZpeCgpCgoJY2FzZSBCZWNoMzJQdWJLZXlUeXBlQ29uc1B1YjoKCQliZWNoMzJQcmVmaXggPSBHZXRDb25maWcoKS5HZXRCZWNoMzJDb25zZW5zdXNQdWJQcmVmaXgoKQoKCX0KCgkvLyBUaGlzIHBpZWNlIG9mIGNvZGUgaXMgdG8ga2VlcCBiYWNrd2FyZHMtY29tcGF0aWJpbGl0eS4KCS8vIEZvciBlZDI1NTE5IGtleXMsIG91ciBvd24gZWQyNTUxOSBpcyByZWdpc3RlcmVkIGluIEFtaW5vIHVuZGVyIGEKCS8vIGRpZmZlcmVudCBuYW1lIHRoYW4gVE0ncyBlZDI1NTE5LiBCdXQgc2luY2UgdXNlcnMgYXJlIGFscmVhZHkgdXNpbmcKCS8vIFRNJ3MgZWQyNTUxOSBiZWNoMzIgZW5jb2RpbmcsIHdlIGV4cGxpY2l0bHkgc2F5IHRvIGJlY2gzMi1lbmNvZGUgb3VyIG93bgoJLy8gZWQyNTUxOSB0aGUgc2FtZSB3YXkgYXMgVE0ncyBlZDI1NTE5LgoJLy8gVE9ETzogUmVtb3ZlIEJlY2gzMmlmeVB1YktleSBhbmQgYWxsIHVzYWdlcyAoY29zbW9zL2Nvc21vcy1zZGsvaXNzdWVzLyM3MzU3KQoJcGtUb01hcnNoYWwgOj0gcHVia2V5CglpZiBlZDI1NTE5UGssIG9rIDo9IHB1YmtleS4oKmVkMjU1MTkuUHViS2V5KTsgb2sgewoJCXBrVG9NYXJzaGFsID0gZWQyNTUxOVBrLkFzVG1QdWJLZXkoKQoJfQoKCXJldHVybiBiZWNoMzIuQ29udmVydEFuZEVuY29kZShiZWNoMzJQcmVmaXgsIGxlZ2FjeS5DZGMuTXVzdE1hcnNoYWxCaW5hcnlCYXJlKHBrVG9NYXJzaGFsKSkKfQoKLy8gTXVzdEJlY2gzMmlmeVB1YktleSBjYWxscyBCZWNoMzJpZnlQdWJLZXkgZXhjZXB0IGl0IHBhbmljcyBvbiBlcnJvci4KZnVuYyBNdXN0QmVjaDMyaWZ5UHViS2V5KHBrdCBCZWNoMzJQdWJLZXlUeXBlLCBwdWJrZXkgY3J5cHRvLlB1YktleSkgc3RyaW5nIHsKCXJlcywgZXJyIDo9IEJlY2gzMmlmeVB1YktleShwa3QsIHB1YmtleSkKCWlmIGVyciAhPSBuaWwgewoJCXBhbmljKGVycikKCX0KCglyZXR1cm4gcmVzCn0KCi8vIEdldFB1YktleUZyb21CZWNoMzIgcmV0dXJucyBhIFB1YmxpY0tleSBmcm9tIGEgYmVjaDMyLWVuY29kZWQgUHVibGljS2V5IHdpdGgKLy8gYSBnaXZlbiBrZXkgdHlwZS4KZnVuYyBHZXRQdWJLZXlGcm9tQmVjaDMyKHBrdCBCZWNoMzJQdWJLZXlUeXBlLCBwdWJrZXlTdHIgc3RyaW5nKSAoY3J5cHRvLlB1YktleSwgZXJyb3IpIHsKCXZhciBiZWNoMzJQcmVmaXggc3RyaW5nCgoJc3dpdGNoIHBrdCB7CgljYXNlIEJlY2gzMlB1YktleVR5cGVBY2NQdWI6CgkJYmVjaDMyUHJlZml4ID0gR2V0Q29uZmlnKCkuR2V0QmVjaDMyQWNjb3VudFB1YlByZWZpeCgpCgoJY2FzZSBCZWNoMzJQdWJLZXlUeXBlVmFsUHViOgoJCWJlY2gzMlByZWZpeCA9IEdldENvbmZpZygpLkdldEJlY2gzMlZhbGlkYXRvclB1YlByZWZpeCgpCgoJY2FzZSBCZWNoMzJQdWJLZXlUeXBlQ29uc1B1YjoKCQliZWNoMzJQcmVmaXggPSBHZXRDb25maWcoKS5HZXRCZWNoMzJDb25zZW5zdXNQdWJQcmVmaXgoKQoKCX0KCglieiwgZXJyIDo9IEdldEZyb21CZWNoMzIocHVia2V5U3RyLCBiZWNoMzJQcmVmaXgpCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gbmlsLCBlcnIKCX0KCglwaywgZXJyIDo9IGNyeXB0b2NvZGVjLlB1YktleUZyb21CeXRlcyhieikKCWlmIGVyciAhPSBuaWwgewoJCXJldHVybiBuaWwsIGVycgoJfQoKCXJldHVybiBwaywgbmlsCn0KCi8vIE11c3RHZXRQdWJLZXlGcm9tQmVjaDMyIGNhbGxzIEdldFB1YktleUZyb21CZWNoMzIgZXhjZXB0IGl0IHBhbmljcyBvbiBlcnJvci4KZnVuYyBNdXN0R2V0UHViS2V5RnJvbUJlY2gzMihwa3QgQmVjaDMyUHViS2V5VHlwZSwgcHVia2V5U3RyIHN0cmluZykgY3J5cHRvLlB1YktleSB7CglyZXMsIGVyciA6PSBHZXRQdWJLZXlGcm9tQmVjaDMyKHBrdCwgcHVia2V5U3RyKQoJaWYgZXJyICE9IG5pbCB7CgkJcGFuaWMoZXJyKQoJfQoKCXJldHVybiByZXMKfQoKLy8gR2V0RnJvbUJlY2gzMiBkZWNvZGVzIGEgYnl0ZXN0cmluZyBmcm9tIGEgQmVjaDMyIGVuY29kZWQgc3RyaW5nLgpmdW5jIEdldEZyb21CZWNoMzIoYmVjaDMyc3RyLCBwcmVmaXggc3RyaW5nKSAoW11ieXRlLCBlcnJvcikgewoJaWYgbGVuKGJlY2gzMnN0cikgPT0gMCB7CgkJcmV0dXJuIG5pbCwgZXJyb3JzLk5ldygmcXVvdDtkZWNvZGluZyBCZWNoMzIgYWRkcmVzcyBmYWlsZWQ6IG11c3QgcHJvdmlkZSBhbiBhZGRyZXNzJnF1b3Q7KQoJfQoKCWhycCwgYnosIGVyciA6PSBiZWNoMzIuRGVjb2RlQW5kQ29udmVydChiZWNoMzJzdHIpCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gbmlsLCBlcnIKCX0KCglpZiBocnAgIT0gcHJlZml4IHsKCQlyZXR1cm4gbmlsLCBmbXQuRXJyb3JmKCZxdW90O2ludmFsaWQgQmVjaDMyIHByZWZpeDsgZXhwZWN0ZWQgJXMsIGdvdCAlcyZxdW90OywgcHJlZml4LCBocnApCgl9CgoJcmV0dXJuIGJ6LCBuaWwKfQoKZnVuYyBhZGRyZXNzQnl0ZXNGcm9tSGV4U3RyaW5nKGFkZHJlc3Mgc3RyaW5nKSAoW11ieXRlLCBlcnJvcikgewoJaWYgbGVuKGFkZHJlc3MpID09IDAgewoJCXJldHVybiBuaWwsIGVycm9ycy5OZXcoJnF1b3Q7ZGVjb2RpbmcgQmVjaDMyIGFkZHJlc3MgZmFpbGVkOiBtdXN0IHByb3ZpZGUgYW4gYWRkcmVzcyZxdW90OykKCX0KCglyZXR1cm4gaGV4LkRlY29kZVN0cmluZyhhZGRyZXNzKQp9Cg=="}})],1),g._v(" "),C("h3",{attrs:{id:"addresses"}},[C("a",{staticClass:"header-anchor",attrs:{href:"#addresses"}},[g._v("#")]),g._v(" Addresses")]),g._v(" "),C("p",[g._v("The Cosmos SDK comes by default with 3 types of addresses:")]),g._v(" "),C("ul",[C("li",[C("code",[g._v("AccAddress")]),g._v(" for accounts.")]),g._v(" "),C("li",[C("code",[g._v("ValAddress")]),g._v(" for validator operators.")]),g._v(" "),C("li",[C("code",[g._v("ConsAddress")]),g._v(" for validator nodes.")])]),g._v(" "),C("p",[g._v("Each of these address types are an alias for an hex-encoded "),C("code",[g._v("[]byte")]),g._v(" array of length 20. Here is the standard way to obtain an address "),C("code",[g._v("aa")]),g._v(" from a "),C("code",[g._v("Pubkey pub")]),g._v(":")]),g._v(" "),C("code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"YWEgOj0gc2RrLkFjY0FkZHJlc3MocHViLkFkZHJlc3MoKS5CeXRlcygpKQo="}}),g._v(" "),C("p",[g._v("These addresses implement the "),C("code",[g._v("Address")]),g._v(" interface:")]),g._v(" "),C("p",[C("code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"Ly8gQWRkcmVzcyBpcyBhIGNvbW1vbiBpbnRlcmZhY2UgZm9yIGRpZmZlcmVudCB0eXBlcyBvZiBhZGRyZXNzZXMgdXNlZCBieSB0aGUgU0RLCnR5cGUgQWRkcmVzcyBpbnRlcmZhY2UgewoJRXF1YWxzKEFkZHJlc3MpIGJvb2wKCUVtcHR5KCkgYm9vbAoJTWFyc2hhbCgpIChbXWJ5dGUsIGVycm9yKQoJTWFyc2hhbEpTT04oKSAoW11ieXRlLCBlcnJvcikKCUJ5dGVzKCkgW11ieXRlCglTdHJpbmcoKSBzdHJpbmcKCUZvcm1hdChzIGZtdC5TdGF0ZSwgdmVyYiBydW5lKQp9"}})],1),g._v(" "),C("p",[g._v("Of note, the "),C("code",[g._v("Marshal()")]),g._v(" and "),C("code",[g._v("Bytes()")]),g._v(" method both return the same raw "),C("code",[g._v("[]byte")]),g._v(" form of the address, the former being needed for Protobuf compatibility. Also, the "),C("code",[g._v("String()")]),g._v(" method is used to return the "),C("code",[g._v("bech32")]),g._v(" encoded form of the address, which should be the only address format with which end-user interract. Here is an example:")]),g._v(" "),C("p",[C("code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"Ly8gU3RyaW5nIGltcGxlbWVudHMgdGhlIFN0cmluZ2VyIGludGVyZmFjZS4KZnVuYyAoYWEgQWNjQWRkcmVzcykgU3RyaW5nKCkgc3RyaW5nIHsKCWlmIGFhLkVtcHR5KCkgewoJCXJldHVybiAmcXVvdDsmcXVvdDsKCX0KCgliZWNoMzJQcmVmaXhBY2NBZGRyIDo9IEdldENvbmZpZygpLkdldEJlY2gzMkFjY291bnRBZGRyUHJlZml4KCkKCgliZWNoMzJBZGRyLCBlcnIgOj0gYmVjaDMyLkNvbnZlcnRBbmRFbmNvZGUoYmVjaDMyUHJlZml4QWNjQWRkciwgYWEuQnl0ZXMoKSkKCWlmIGVyciAhPSBuaWwgewoJCXBhbmljKGVycikKCX0KCglyZXR1cm4gYmVjaDMyQWRkcgp9"}})],1),g._v(" "),C("h2",{attrs:{hide:"",id:"next"}},[C("a",{staticClass:"header-anchor",attrs:{href:"#next"}},[g._v("#")]),g._v(" Next")]),g._v(" "),C("p",{attrs:{hide:""}},[g._v("Learn about "),C("RouterLink",{attrs:{to:"/basics/gas-fees.html"}},[g._v("gas and fees")])],1)],1)}),[],!1,null,null,null);e.default=t.exports}}]);